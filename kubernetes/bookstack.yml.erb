apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    service: mysql
  name: mysql
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_DATABASE
          value: bookstack
        - name: MYSQL_PASSWORD
          value: <%= taiga_mysql_pw %>
        - name: MYSQL_ROOT_PASSWORD
          value: <%= taiga_mysql_root %>
        - name: MYSQL_USER
          value: bookstack
        image: mysql:5.7
        name: mysql
        ports:
        - containerPort: 3306
        volumeMounts:
          - name: vol
            mountPath: /var/lib/mysql
      volumes:
      - name: vol
        persistentVolumeClaim:
          claimName: bookstack-vol
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: mysql
  name: mysql
spec:
  type: NodePort
  ports:
  - name: "3306"
    port: 3306
    targetPort: 3306
  selector:
    service: mysql
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: bookstack
  name: bookstack
spec:
  type: ClusterIP
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: bookstack
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: bookstack
  name: bookstack
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: bookstack
    spec:
      containers:
      - env:
        - name: namespace
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: podname
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: nodename
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: DB_DATABASE
          value: bookstack
        - name: DB_HOST
          value: mysql
        - name: DB_PASSWORD
          value: <%= taiga_mysql_pw %>
        - name: DB_USERNAME
          value: bookstack
        - name: MAIL_USERNAME
          value: bookstack@ocf.berkeley.edu
        - name: MAIL_PASSWORD 
          value: <%= taiga_smtp_pw %>
        - name: MAIL_HOST
          value: smtp.ocf.berkeley.edu
        - name: MAIL_PORT
          value: '465'
        - name: MAIL_ENCRYPTION
          value: SSL
        - name: MAIL_DRIVER
          value: smtp
        - name: MAIL_FROM
          value: bookstack@ocf.berkeley.edu
        - name: APP_URL
          value: https://bookstack.dev-kubernetes.ocf.berkeley.edu/
        - name: AUTH_METHOD
          value: saml2
        - name: SAML2_NAME
          value: OCF
        - name: SAML2_EMAIL_ATTRIBUTE
          value: email
        - name: SAML2_EXTERNAL_ID_ATTRIBUTE
          value: uid
        - name: SAML2_DISPLAY_NAME_ATTRIBUTES
          value: username
        - name: SAML2_IDP_ENTITYID
          value: "https://auth.ocf.berkeley.edu/auth/realms/ocf/protocol/saml/descriptor"
        - name: SAML2_AUTOLOAD_METADATA
          value: "true"
        - name: SAML2_DUMP_USER_DETAILS
          value: "false"
        - name: SAML2_USER_TO_GROUPS
          value: "true"
        - name: SAML2_GROUP_ATTRIBUTE
          value: Role
        image: solidnerd/bookstack:latest
        name: bookstack
        readinessProbe:
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 15
        livenessProbe:
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 1
          periodSeconds: 60
        ports:
        - name: http
          containerPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
    app: bookstack
  name: vhost-ingress
spec:
  rules:
    - host: bookstack.dev-kubernetes.ocf.berkeley.edu
      http:
        paths:
          - backend:
              serviceName: bookstack
              servicePort: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bookstack-vol
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 8Gi
  storageClassName: managed-nfs-storage
